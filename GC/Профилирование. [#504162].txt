1.Утилита Jconsole
Анализ проводился параметрами VM = -XX:+UseParallelGC -Xmx8m -Xms8m

Распределение областей памяти:
1.Eden space - 1536 kb.
2.Survivor space - 512 kb (причем только 1).
3.Old Gen space - 5632 kb.
При постепенном добавлении объектов Item через консоль происходит заполнение
области памяти Eden space, при заполнении до 100%, производится очистка с переносом данных 
в область памяти Old Gen space, при добавлении относительно небольшого кол-ва объектов, но с длинными 
наименованиями область памяти Old Gen space заполняется до 100% и происходит выброс исключения
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
с завершением выполнения программы.


2.Утилита jstat
Показывает почти те же параметры, что и Jconsole, но только в текстовом виде и по запросу.
Области памяти Eden space, Survivor space (2 региона по 512kb) и Old Gen space с указанием объемов областей и фактически 
занятого места. 
При работе приложения происходит:
	очистка области Eden (при заполнении)
	обмен занятыми данными Survivor 1 и Survivor 2 (зануление 0 и появление 64 kb в другом)
	добавление данных в области Old Gen.
При работе в режиме простоя, происходит самозаполнение и самоочистка Eden и обмен обмен регионов
Survivor, Old Gen так же постепенно заполняется. По мере достижения определенного процента заполнения
Old Gen происходит частичная очистка данной области.
